{
  "hash": "b7919344fed790d3e4a94ff96159cb78",
  "result": {
    "markdown": "---\ntitle: Initial Setup\nexecute:\n  eval: false\n---\n\n## Overview\n\nThis is the setup required to contribute to our Cookbook. Instructions are for the command line; see [quarto.org](https://quarto.org) for equivalents in R and for the most up-to-date and more detailed information.\n\n## Install Quarto\n\n### Option 1: Install Quarto locally on your machine\n\nFirst, in your internet browser, go to the very latest version of the Quarto command line interface (CLI):\n\n<https://github.com/quarto-dev/quarto-cli/releases/latest>\n\nDownload Quarto by clicking on the file appropriate for your operating system:\n\n-   **Linux**: amd64.deb\n\n-   **Mac**: macos.pkg\n\n-   **Windows**: win.msi\n\nOnce download is complete, follow the installation prompts on your computer like you do for other software.\n\n### Check install\n\nFinally, check to make sure Quarto installed properly. Open a command line terminal and type:\n\n``` {.bash}\nquarto check install\n```\n\n::: {.callout-note collapse=\"true\"}\n## Additional checks\n\nYou can also run:\n\n-   `quarto check knitr` to locate R, verify we have the rmarkdown package, and do a basic render\n-   `quarto check jupyter` to locate Python, verify we have Jupyter, and do a basic render\n-   `quarto check` to run all of these checks together\n:::\n\nFrom quarto.org: If you need to install a version more recent than the latest release, see the documentation on installing the [Development Version](https://quarto.org/docs/getting-started/installation.html#development-version).\n\n### Option 2: Install Quarto in a docker container\n\nIf installing quarto locally is not an option, you can install it inside a container using the\nfollowing `Dockerfile`:\n\n::: {.cell}\n\n```{.r .cell-code  fold=\"true\" summary=\"Show the Dockerfile\"}\n##############################\n# This Dockerfile installs quarto and then runs quarto serve against the\n# internal /home/quarto/to_serve.\n#\n# BUILD\n# -----\n# To build this container, run\n#\n#     docker build -t quarto_serve .\n#\n# Add the --no-cache option to force docker to build fresh and get the most\n# recent version of quarto.\n#\n#\n# RUN\n# ---\n# 1. Find the directory you want quarto to serve. Let's call this /PATH/TO/earthdata-cloud-cookbook.\n# 2. Run docker:\n#\n#     docker run --rm -it -p 4848:4848 -v /PATH/TO/earthdata-cloud-cookbook:/home/quarto/to_serve quarto_serve\n#\n# 3. Open your browser and go to http://127.0.0.1:4848/\n#\n##############################\n\nFROM ubuntu:hirsute\n\n######\n# Install some command line tools we'll need\n######\nRUN apt-get update\nRUN apt-get -y install wget\nRUN apt-get -y install gdebi-core\nRUN apt-get -y install git\n\n\n######\n# Install quarto (https://quarto.org/)\n######\n\n# This is a quick and dirty way of getting the newest version number from\n# https://github.com/quarto-dev/quarto-cli/releases/latest. What's happening is\n# we're pulling the version number out of the redirect URL. This will end up\n# with QVER set to something like 0.2.11.\nRUN QVER=`wget --max-redirect 0 https://github.com/quarto-dev/quarto-cli/releases/latest 2>&1 | grep \"Location\" | sed 's/L.*tag\\/v//' | sed 's/ .*//'` \\\n    && wget -O quarto.deb \"https://github.com/quarto-dev/quarto-cli/releases/download/v$QVER/quarto-$QVER-amd64.deb\"\nRUN gdebi -n quarto.deb\n\n# Run this to make sure quarto installed correctly\nRUN quarto check install\n\n\n######\n# Create a non-root user called quarto\n######\nRUN useradd -ms /bin/bash quarto\nUSER quarto\nRUN mkdir /home/quarto/to_serve\nWORKDIR /home/quarto/to_serve\n\n\n######\n# Start quarto serve\n######\n\nCMD quarto serve --no-browse --host 0.0.0.0 --port 4848\n```\n:::\n\n\n## Clone Cookbook from GitHub\n\nNow clone our Cookbook and make it your current directory.\n\n``` {.bash}\ngit clone https://github.com/NASA-Openscapes/earthdata-cloud-cookbook\ncd earthdata-cloud-cookbook\n```\n\n<!---TODO: Offer GitHub setup instructions: writeup GitHub Clinic --->\n\n## Build Cookbook!\n\nYou should now be able to serve our Cookbook from the `earthdata-cloud-cookbook` directory.\n\n``` {.bash}\nquarto serve\n```\n\nThis will open the Cookbook as a new tab in your browser. Now you're all set to contribute to the Cookbook! Read about how in the next chapter.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}