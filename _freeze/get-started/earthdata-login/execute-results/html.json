{
  "hash": "130d808622e79668edcca09559639664",
  "result": {
    "markdown": "---\ntitle: EarthData Login \nexecute:\n  eval: false\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\nThis content combines several original NASA sources: \n\n- [PO.DAAC AGU 2020 search by shapefile](https://github.com/NASA-Openscapes/AGU-2020/blob/main/Part-II/01_sst_shpfile/AGU_tutorial1_shp_search.ipynb) \n- LP DAAC HLS R Tutorial (link coming soon)\n- [LP DAAC Data User Resources Earthdata Login Setup](https://git.earthdata.nasa.gov/projects/LPDUR/repos/daac_data_download_python/browse/EarthdataLoginSetup.py)\n\n---\n\n## Background\n\nAn Earthdata Login account is required to access data, as well as discover restricted data, from the NASA Earthdata system. Thus, to access NASA data, you need EarthData Login. Please visit <https://urs.earthdata.nasa.gov> to register and manage your Earthdata Login account. This account is free to create and only takes a moment to set up.\n\nTo avoid being prompted for credentials every time you run and also allow clients such as curl to log in, you can create and/or add the following to a \"netrc\" file (pronounced \"Net RC\"). On a Mac, this is a file called `.netrc`, and on Windows it is `_netrc`. (There are no extensions on either file). \n\nBelow are ways to create a \"netrc\" file in your home directory. \n\n## R for Windows or macOS\n\nCreate a \"netrc\" file by running the following code in your R console (or after saving to an R script).\n\n::: {.cell}\n\n```{.r .cell-code}\n# Required packages for this script\npackages = c('sys', 'getPass')\n\n# Identify missing (not installed) packages\nnew.packages = packages[!(packages %in% installed.packages()[,\"Package\"])]\n\n# Install missing packages\nif(length(new.packages)) install.packages(new.packages, repos='http://cran.rstudio.com/')\n\n# Load packages into R\nlibrary(sys)\nlibrary(getPass)\n\n# Determine OS and associated netrc file \nnetrc_type <- if(.Platform$OS.type == \"windows\") \"_netrc\" else \".netrc\"    # Windows OS uses _netrc file\n\n# Specify path to user profile \nup <- file.path(Sys.getenv(\"USERPROFILE\"))                            # Retrieve user directory (for netrc file)\n\n# Below, HOME and Userprofile directories are set.  \n\nif (up == \"\") {\n    up <- Sys.getenv(\"HOME\") \n    Sys.setenv(\"userprofile\" = up)\n    if (up == \"\") {\n        cat('USERPROFILE/HOME directories need to be set up. Please type sys.setenv(\"HOME\" = \"YOURDIRECTORY\") or  sys.setenv(\"USERPROFILE\" = \"YOURDIRECTORY\") in your console and type your USERPROFILE/HOME direcory instead of \"YOURDIRECTORY\". Next, run the code chunk again.')\n    }\n} else {Sys.setenv(\"HOME\" = up)}        \n\nnetrc_path <- file.path(up, netrc_type, fsep = .Platform$file.sep)    # Path to netrc file\n\n# Create a netrc file if one does not exist already\nif (file.exists(netrc_path) == FALSE || grepl(\"urs.earthdata.nasa.gov\", readLines(netrc_path)) == FALSE) {\n    netrc_conn <- file(netrc_path)\n    \n    # User will be prompted for NASA Earthdata Login Username and Password below\n    writeLines(c(\"machine urs.earthdata.nasa.gov\",\n                 sprintf(\"login %s\", getPass(msg = \"Enter NASA Earthdata Login Username \\n (An account can be Created at urs.earthdata.nasa.gov):\")),\n                 sprintf(\"password %s\", getPass(msg = \"Enter NASA Earthdata Login Password:\"))), netrc_conn)\n    close(netrc_conn)\n}\n```\n:::\n\n## Python for Windows or macOS\n\nCreate a \"netrc\" file by running the following code in your python console (or after saving to an .py script).\n\n**LP DAAC Approach:**\n\n::: {.cell}\n\n```{.python .cell-code}\n# Load necessary packages into Python\nfrom netrc import netrc\nfrom subprocess import Popen\nfrom getpass import getpass\nimport os\n\n# -----------------------------------AUTHENTICATION CONFIGURATION-------------------------------- #\nurs = 'urs.earthdata.nasa.gov'    # Earthdata URL to call for authentication\nprompts = ['Enter NASA Earthdata Login Username \\n(or create an account at urs.earthdata.nasa.gov): ',\n           'Enter NASA Earthdata Login Password: ']\n\n# Determine if netrc file exists, and if so, if it includes NASA Earthdata Login Credentials\ntry:\n    netrcDir = os.path.expanduser(\"~/.netrc\")\n    netrc(netrcDir).authenticators(urs)[0]\n\n# Below, create a netrc file and prompt user for NASA Earthdata Login Username and Password\nexcept FileNotFoundError:\n    homeDir = os.path.expanduser(\"~\")\n    Popen('touch {0}.netrc | chmod og-rw {0}.netrc | echo machine {1} >> {0}.netrc'.format(homeDir + os.sep, urs), shell=True)\n    Popen('echo login {} >> {}.netrc'.format(getpass(prompt=prompts[0]), homeDir + os.sep), shell=True)\n    Popen('echo password {} >> {}.netrc'.format(getpass(prompt=prompts[1]), homeDir + os.sep), shell=True)\n\n# Determine OS and edit netrc file if it exists but is not set up for NASA Earthdata Login\nexcept TypeError:\n    homeDir = os.path.expanduser(\"~\")\n    Popen('echo machine {1} >> {0}.netrc'.format(homeDir + os.sep, urs), shell=True)\n    Popen('echo login {} >> {}.netrc'.format(getpass(prompt=prompts[0]), homeDir + os.sep), shell=True)\n    Popen('echo password {} >> {}.netrc'.format(getpass(prompt=prompts[1]), homeDir + os.sep), shell=True)\n```\n:::\n\n**PO.DAAC Approach:**\n\n```\nJulie note to Catalina/Jack: I wasn't sure if this would be best here or in the search-by-shapefile.qmd: \n\nThe setup_earthdata_login_auth function will allow Python scripts to log into any Earthdata Login application programmatically. To avoid being prompted for credentials every time you run and also allow clients such as curl to log in, you can add the following to a .netrc (_netrc on Windows) file in your home directory:\n\nmachine urs.earthdata.nasa.gov\n    login <your username>\n    password <your password>\nMake sure that this file is only readable by the current user or you will receive an error stating \"netrc access too permissive.\"\n\n$ chmod 0600 ~/.netrc\n```\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom netrc import netrc\nfrom platform import system\nfrom getpass import getpass\nfrom http.cookiejar import CookieJar\nfrom os.path import join, expanduser\n\nTOKEN_DATA = (\"<token>\"\n              \"<username>%s</username>\"\n              \"<password>%s</password>\"\n              \"<client_id>PODAAC CMR Client</client_id>\"\n              \"<user_ip_address>%s</user_ip_address>\"\n              \"</token>\")\n\n\ndef setup_cmr_token_auth(endpoint: str='cmr.earthdata.nasa.gov'):\n    ip = requests.get(\"https://ipinfo.io/ip\").text.strip()\n    return requests.post(\n        url=\"https://%s/legacy-services/rest/tokens\" % endpoint,\n        data=TOKEN_DATA % (input(\"Username: \"), getpass(\"Password: \"), ip),\n        headers={'Content-Type': 'application/xml', 'Accept': 'application/json'}\n    ).json()['token']['id']\n\n\ndef setup_earthdata_login_auth(endpoint: str='urs.earthdata.nasa.gov'):\n    netrc_name = \"_netrc\" if system()==\"Windows\" else \".netrc\"\n    try:\n        username, _, password = netrc(file=join(expanduser('~'), netrc_name)).authenticators(endpoint)\n    except (FileNotFoundError, TypeError):\n        print('Please provide your Earthdata Login credentials for access.')\n        print('Your info will only be passed to %s and will not be exposed in Jupyter.' % (endpoint))\n        username = input('Username: ')\n        password = getpass('Password: ')\n    manager = request.HTTPPasswordMgrWithDefaultRealm()\n    manager.add_password(None, endpoint, username, password)\n    auth = request.HTTPBasicAuthHandler(manager)\n    jar = CookieJar()\n    processor = request.HTTPCookieProcessor(jar)\n    opener = request.build_opener(auth, processor)\n    request.install_opener(opener)\n\n\n# Get your authentication token for searching restricted records in the CMR:\n_token = setup_cmr_token_auth(endpoint=\"cmr.earthdata.nasa.gov\")\n\n# Start authenticated session with URS to allow restricted data downloads:\nsetup_earthdata_login_auth(endpoint=\"urs.earthdata.nasa.gov\")\n```\n:::\n\n\n\n## Common questions\n\n### How do I know if I already have a netrc file? \n\nYour netrc file will likely be in your root directory. It is a hidden file that you will not be able to see from your Finder (Mac) or Windows Explorer (Windows), so you'll have to do this from the Command Line. Navigate to your root directory and list all: \n\n#### On a Mac: \n\n```{.bash}\ncd ~\nls -la\n```\n\nIf you see a `.netrc` file, view what's inside (perhaps with `nano`), and if you'd like to delete the current version to start afresh, type `rm .netrc`. \n\n\n<!---\n### Previous notes/ideas\n\nTODO: develop as prose to set up for the following .ipynb examples\n\nTo access NASA data you have to authenticate.\n\nSolutions that work - these are detailed in separate chapters as Jupyter notebooks (`.ipynb`).\n\n1)  To access NASA data one must setup an Earthdata Login profile. This involves (prose here)\n\nSee/link to [Christine's post & conversation on the Jupyter discourse forum](https://discourse.jupyter.org/t/how-do-i-properly-protect-my-data-access-passwords-not-jupyter-tokens-passwords-on-3rd-party-jupyter-hub-services/9277)\n\n-   Create a netrc file\\\n-   Submit EDL credentials within a script\n\nSome talk about the redirects...\n\n--->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}