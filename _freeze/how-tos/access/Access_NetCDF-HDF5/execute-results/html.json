{
  "hash": "e0e0faccee8906da24a344594ae3bb99",
  "result": {
    "markdown": "---\ntitle: \"Direct Cloud Access\"\nexecute:\n  eval: false\n---\n\n\n## Introduction\n\nWe can access data directly from NASA Earthdata Cloud using the following code. \n\nNote that NASA cloud-hosted data is in Amazon Web Services (AWS) Region `us-west-2`. Your compute instance must also be in `us-west-2` in order for the following code to run successfully.\n\n## Code\n\nHere are our recommended approaches for accessing data in NASA Earthdata Cloud with code.\n\n::: {.panel-tabset group=\"language\"}\n## Python\n\nInstall the [earthaccess](\"https://github.com/nsidc/earthaccess\") package:\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Install earthaccess\nconda install -c conda-forge earthaccess\n```\n:::\n\n\nImport packages: \n\n\n::: {.cell}\n\n```{.python .cell-code}\n## Import earthaccess\nimport earthaccess\nimport xarray as xr\n```\n:::\n\n\n### Earthdata Login Authentication\n\nWe will authenticate below using a netrc file. See the [appendix](\"https://nasa-openscapes.github.io/earthdata-cloud-cookbook/appendix/authentication.html\") for more information on [Earthdata Login](\"https://urs.earthdata.nasa.gov/\") and netrc setup.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nauth = earthaccess.login(strategy=\"netrc\")\n# are we authenticated?\nif not auth.authenticated:\n    # ask for credentials and persist them in a .netrc file\n    auth.login(strategy=\"interactive\", persist=True)\n```\n:::\n\n\n### Working with the URLs directly\nWe can use `earthaccess` to grab the file URLs and then access them with the `xarray` library. See the previous [Find Data](\"https://nasa-openscapes.github.io/earthdata-cloud-cookbook/how-tos/find-data/\") How-To guide for more information on how to discover datasets of interest. \n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n#Access land ice height from ATLAS/ICESat-2 V005 (10.5067/ATLAS/ATL06.005), searching for data over western Greenland coast over two weeks in July 2022. The data are provided as HDF5 granules (files) that span about 1/14th of an orbit.\n\nresults = earthaccess.search_data(short_name=\"ATL06\",\n                                  version=\"005\",\n                                  cloud_hosted=True,\n                                  temporal = (\"2022-07-17\",\"2022-07-31\"),\n                                  bounding_box = (-51.96423,68.10554,-48.71969,70.70529))\n\ns3_url = results[0].data_links(access=\"direct\")\nprint(s3_url)\n\n#Use xarray to load the data for a single group in the HDF5 file, in this case land ice segments:\nds = xr.open_mfdataset(earthaccess.open(results), group='/gt1l/land_ice_segments')\nds\n```\n:::\n\n\n\n## R\n\nR code coming soon!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Matlab\n\nMatlab code coming soon!\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n## Command Line\n\nWith `wget` and `curl`:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Coming soon!\n```\n:::\n\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}