---
title: EarthData Login
execute:
  eval: false
format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

*Modified From [PODAAC AGU 2020](https://github.com/NASA-Openscapes/AGU-2020/blob/main/Part-II/01_sst_shpfile/AGU_tutorial1_shp_search.ipynb) and LPDAAC HLS Tutorial]*

An Earthdata Login account is required to access data, as well as discover restricted data, from the NASA Earthdata system. Thus, to access NASA data, you need EarthData Login. Please visit <https://urs.earthdata.nasa.gov> to register and manage your Earthdata Login account. This account is free to create and only takes a moment to set up.

To avoid being prompted for credentials every time you run and also allow clients such as curl to log in, you can create and/or add the following to a "netrc" file (pronounced "Net RC"). On a Mac, this is a file called `.netrc`, and on Windows it is `_netrc`. (There are no extensions on either file). 

Below are ways to create a "netrc" file in your home directory. 

## R for Windows or macOS

Create a "netrc" file by running the following code in your R console (or after saving to an R script).

```{r, eval=FALSE}

# Required packages for this script
packages = c('sys', 'getPass')

# Identify missing (not installed) packages
new.packages = packages[!(packages %in% installed.packages()[,"Package"])]

# Install missing packages
if(length(new.packages)) install.packages(new.packages, repos='http://cran.rstudio.com/')

# Load packages into R
library(sys)
library(getPass)

# Determine OS and associated netrc file 
netrc_type <- if(.Platform$OS.type == "windows") "_netrc" else ".netrc"    # Windows OS uses _netrc file

# Specify path to user profile 
up <- file.path(Sys.getenv("USERPROFILE"))                            # Retrieve user directory (for netrc file)

# Below, HOME and Userprofile directories are set.  

if (up == "") {
    up <- Sys.getenv("HOME") 
    Sys.setenv("userprofile" = up)
    if (up == "") {
        cat('USERPROFILE/HOME directories need to be set up. Please type sys.setenv("HOME" = "YOURDIRECTORY") or  sys.setenv("USERPROFILE" = "YOURDIRECTORY") in your console and type your USERPROFILE/HOME direcory instead of "YOURDIRECTORY". Next, run the code chunk again.')
    }
} else {Sys.setenv("HOME" = up)}        

netrc_path <- file.path(up, netrc_type, fsep = .Platform$file.sep)    # Path to netrc file

# Create a netrc file if one does not exist already
if (file.exists(netrc_path) == FALSE || grepl("urs.earthdata.nasa.gov", readLines(netrc_path)) == FALSE) {
    netrc_conn <- file(netrc_path)
    
    # User will be prompted for NASA Earthdata Login Username and Password below
    writeLines(c("machine urs.earthdata.nasa.gov",
                 sprintf("login %s", getPass(msg = "Enter NASA Earthdata Login Username \n (An account can be Created at urs.earthdata.nasa.gov):")),
                 sprintf("password %s", getPass(msg = "Enter NASA Earthdata Login Password:"))), netrc_conn)
    close(netrc_conn)
}

```


## Common questions

### How do I know if I already have a netrc file? 

Your netrc file will likely be in your root directory. It is a hidden file that you will not be able to see from your Finder (Mac) or Windows Explorer (Windows), so you'll have to do this from the Command Line. Navigate to your root directory and list all: 

#### On a Mac: 

```{.bash}
cd ~
ls -la
```

If you see a `.netrc` file, view what's inside (perhaps with `nano`), and if you'd like to delete the current version to start afresh, type `rm .netrc`. 


<!---
### Previous notes/ideas

TODO: develop as prose to set up for the following .ipynb examples

To access NASA data you have to authenticate.

Solutions that work - these are detailed in separate chapters as Jupyter notebooks (`.ipynb`).

1)  To access NASA data one must setup an Earthdata Login profile. This involves (prose here)

See/link to [Christine's post & conversation on the Jupyter discourse forum](https://discourse.jupyter.org/t/how-do-i-properly-protect-my-data-access-passwords-not-jupyter-tokens-passwords-on-3rd-party-jupyter-hub-services/9277)

-   Create a netrc file\
-   Submit EDL credentials within a script

Some talk about the redirects...

--->
