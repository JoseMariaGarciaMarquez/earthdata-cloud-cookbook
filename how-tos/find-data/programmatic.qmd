---
title: "Find Data: Programmatic Search"
execute:
  eval: false
  echo: fenced
---

## Introduction

We can find data programmatically using the following code.

## Code

Here are our recommended approaches for finding data with code.

::: {.panel-tabset group="language"}
## Python

In Python we can use the [`earthdata`](https://earthdata.readthedocs.io/en/latest/) library (to be renamed `earthaccess` very soon!)

To install the package we'll run this code from the command line. Note: you can run shell code directly from a Jupyter Notebook cell by adding a `!`: `!conda install`.

```{bash}
# Install earthdata
conda install -c conda-forge earthdata
```

This example searches for data from the [Land Processes DAAC](https://lpdaac.usgs.gov/) with a spatial bounding box and temporal range. 

```{python}
## Import packages
from earthdata import DataGranules, DataCollections
from pprint import pprint 


# We'll get 4 collections that match with our keyword of interest
collections = DataCollections(auth).keyword("REFLECTANCE").cloud_hosted(True).get(4)

# Let's print 2 collections
for collection in collections[0:2]:
    print(pprint(collection.summary()) , collection.abstract(), "\n")
    
#Search for files from the second dataset result over a small plot in Nebraska, USA for two weeks in September 2022
granules = DataGranules().concept_id("C2021957657-LPCLOUD").temporal("2022-09-10","2022-09-24").bounding_box(-101.67271,41.04754,-101.65344,41.06213)
print(len(granules))

# We get the metadata records from CMR
granules = GranuleQuery.get()
```


## R

R code coming soon!

```{r}
# Coming soon!
```

## Matlab

Matlab code coming soon!

```{bash}
#| echo: true
# Coming soon!
```

## Command Line

With `wget` and `curl`:

```{bash}
# Coming soon!
```


:::
